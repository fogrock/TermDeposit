@model TermDepositsLibrary.TDPortfolio

<div class="jumbotron">
    <h1>Term Deposit Portfolio</h1>
    <p class="lead">A place to review and modify your holdings</p>
    @*@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "actionForm", autocomplete = "off" }))
        {*@
    <div class="form-group">
        <label for="select">Portfolio Actions:</label>
        <select class="form-control" id="select" name="select">
            <option value="Hold">Hold</option>
            <option value="Buy">Buy</option>
            <option value="Sell">Sell</option>
        </select>
    </div>
    @*}*@
    <div id='seconds-counter'> </div>
    <br>
    <h2 id="tmv"></h2>
</div>
<div class="row">
    <table id="table" class="table table-striped table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Principal</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
                <th style="text-align:center" scope="col">Interest Rate</th>
                <th style="text-align:center" scope="col">Term</th>
                <th scope="col">Maturity Amount</th>
            </tr>
        </thead>
        <tbody>
            @{int i = 1;}
            @foreach (var td in Model.holdngsList)
            {
                <tr>
                    <th scope="row">@i</th>
                    <td class="principal">@td.principalString</td>
                    <td>@td.startDateString</td>
                    <td>@td.endDateString</td>
                    <td style="text-align:center">@td.interestRateString</td>
                    <td style="text-align:center">@td.term</td>
                    <td>@td.maturityAmountString</td>
                </tr>
                i++;
            }

        </tbody>
    </table>
</div>
<script>
    var tmv = formatMoney(Number(@Model.GetPortfolioMV()));
    document.getElementById("tmv").innerHTML = "Total maturity value: " + tmv;

    var isBuy = null;
    @if (ViewBag.isBuy != null) {
            @: isBuy = '@ViewBag.isBuy';
                            }
    if (isBuy == 'true') {
        var seconds = 0;
        var el = document.getElementById('seconds-counter');

        function incrementSeconds() {
            seconds += 1;
            el.innerText = "Waiting: " + seconds + " seconds";
        }
        var cancel = setInterval(incrementSeconds, 1000);
        setTimeout(function () { $('#select option[value="Buy"]').attr("selected", "selected"); $('#select').trigger("change"); }, 5000);
    }

    var isSell = null;
    @if (ViewBag.isSell != null) {
            @: isSell = '@ViewBag.isSell';
            }
    if (isSell == 'true') {
        var seconds = 0;
        var el = document.getElementById('seconds-counter');

        function incrementSeconds() {
            seconds += 1;
            el.innerText = "Counting: " + seconds + " seconds";
        }
        var cancel = setInterval(incrementSeconds, 1000);
        setTimeout(function () { $('#select option[value="Sell"]').attr("selected", "selected"); $('#select').trigger("change"); }, 5000);
    }

    $("#select").change(function () {

        var seconds = 0;
        var el = document.getElementById('seconds-counter');

        function incrementSeconds() {
            seconds += 1;
            el.innerText = "Counting: " + seconds + " seconds";
        }
        var cancel = setInterval(incrementSeconds, 1000);

        value = $('#select').val();
        if (value === "Buy") {
            $.ajax({
                type: "POST",
                url: "/Home/Buy/",
                data: {},
                contentType: 'json',
                success: function () {
                    location.reload(true)
                }
            });
        }
        if (value === "Sell") {
            $.ajax({
                type: "POST",
                url: "/Home/Sell/",
                data: {},
                contentType: 'json',
                success: function () {
                    location.reload(true)
                }
            });
        }
    });

    function formatMoney(number) {
        return number.toLocaleString('en-AU', { style: 'currency', currency: 'AUD' });
    }
</script>